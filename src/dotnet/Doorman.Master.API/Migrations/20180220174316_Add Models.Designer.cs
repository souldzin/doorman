// <auto-generated />
using Doorman.Master.API.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Doorman.Master.API.Migrations
{
    [DbContext(typeof(DoormanContext))]
    [Migration("20180220174316_Add Models")]
    partial class AddModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Doorman.Master.API.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Doorman.Master.API.Entities.RoomOccupancySnapshot", b =>
                {
                    b.Property<int>("RoomOccupancySnapshotId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<int>("RoomId");

                    b.HasKey("RoomOccupancySnapshotId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomOccupancySnapshots");
                });

            modelBuilder.Entity("Doorman.Master.API.Entities.RoomOccupancySnapshot", b =>
                {
                    b.HasOne("Doorman.Master.API.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
